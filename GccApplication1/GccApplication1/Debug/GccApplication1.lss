
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000032e  000003c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000032e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800102  00800102  000003c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008f4  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000707  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000060c  00000000  00000000  000014b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  00001ac4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000406  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ae  00000000  00000000  00001fde  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 07 01 	jmp	0x20e	; 0x20e <__vector_13>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	8e 00       	.word	0x008e	; ????
  6a:	97 00       	.word	0x0097	; ????
  6c:	a4 00       	.word	0x00a4	; ????
  6e:	aa 00       	.word	0x00aa	; ????
  70:	b0 00       	.word	0x00b0	; ????
  72:	b5 00       	.word	0x00b5	; ????
  74:	bb 00       	.word	0x00bb	; ????
  76:	c2 00       	.word	0x00c2	; ????
  78:	c6 00       	.word	0x00c6	; ????
  7a:	ce 00       	.word	0x00ce	; ????

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ee e2       	ldi	r30, 0x2E	; 46
  90:	f3 e0       	ldi	r31, 0x03	; 3
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 30       	cpi	r26, 0x02	; 2
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a2 e0       	ldi	r26, 0x02	; 2
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	aa 30       	cpi	r26, 0x0A	; 10
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 6f 01 	call	0x2de	; 0x2de <main>
  b2:	0c 94 95 01 	jmp	0x32a	; 0x32a <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <initIO>:
	while ( !(UCSR0A & (1<<RXC0)) )
		
	recieved_byte = UDR0;

	return recieved_byte;
}
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	84 b9       	out	0x04, r24	; 4
  be:	8a b9       	out	0x0a, r24	; 10
  c0:	87 ef       	ldi	r24, 0xF7	; 247
  c2:	8a b9       	out	0x0a, r24	; 10
  c4:	15 b8       	out	0x05, r1	; 5
  c6:	1b b8       	out	0x0b, r1	; 11
  c8:	08 95       	ret

000000ca <reset>:
  ca:	8b b1       	in	r24, 0x0b	; 11
  cc:	1b b8       	out	0x0b, r1	; 11
  ce:	8b b1       	in	r24, 0x0b	; 11
  d0:	1b b8       	out	0x0b, r1	; 11
  d2:	85 b1       	in	r24, 0x05	; 5
  d4:	15 b8       	out	0x05, r1	; 5
  d6:	85 b1       	in	r24, 0x05	; 5
  d8:	15 b8       	out	0x05, r1	; 5
  da:	85 b1       	in	r24, 0x05	; 5
  dc:	15 b8       	out	0x05, r1	; 5
  de:	85 b1       	in	r24, 0x05	; 5
  e0:	15 b8       	out	0x05, r1	; 5
  e2:	85 b1       	in	r24, 0x05	; 5
  e4:	15 b8       	out	0x05, r1	; 5
  e6:	08 95       	ret

000000e8 <afisare>:
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
  f0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
  f4:	82 17       	cp	r24, r18
  f6:	93 07       	cpc	r25, r19
  f8:	09 f4       	brne	.+2      	; 0xfc <afisare+0x14>
  fa:	58 c0       	rjmp	.+176    	; 0x1ac <afisare+0xc4>
  fc:	ec 01       	movw	r28, r24
  fe:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 102:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 106:	0e 94 65 00 	call	0xca	; 0xca <reset>
 10a:	ca 30       	cpi	r28, 0x0A	; 10
 10c:	d1 05       	cpc	r29, r1
 10e:	08 f0       	brcs	.+2      	; 0x112 <afisare+0x2a>
 110:	4c c0       	rjmp	.+152    	; 0x1aa <afisare+0xc2>
 112:	fe 01       	movw	r30, r28
 114:	ec 5c       	subi	r30, 0xCC	; 204
 116:	ff 4f       	sbci	r31, 0xFF	; 255
 118:	0c 94 8f 01 	jmp	0x31e	; 0x31e <__tablejump2__>
 11c:	28 9a       	sbi	0x05, 0	; 5
 11e:	2c 9a       	sbi	0x05, 4	; 5
 120:	2d 9a       	sbi	0x05, 5	; 5
 122:	2b 9a       	sbi	0x05, 3	; 5
 124:	5a 9a       	sbi	0x0b, 2	; 11
 126:	5c 9a       	sbi	0x0b, 4	; 11
 128:	85 b1       	in	r24, 0x05	; 5
 12a:	85 b9       	out	0x05, r24	; 5
 12c:	3f c0       	rjmp	.+126    	; 0x1ac <afisare+0xc4>
 12e:	5a 9a       	sbi	0x0b, 2	; 11
 130:	2b 9a       	sbi	0x05, 3	; 5
 132:	8b b1       	in	r24, 0x0b	; 11
 134:	8b b9       	out	0x0b, r24	; 11
 136:	85 b1       	in	r24, 0x05	; 5
 138:	85 b9       	out	0x05, r24	; 5
 13a:	85 b1       	in	r24, 0x05	; 5
 13c:	85 b9       	out	0x05, r24	; 5
 13e:	85 b1       	in	r24, 0x05	; 5
 140:	85 b9       	out	0x05, r24	; 5
 142:	85 b1       	in	r24, 0x05	; 5
 144:	85 b9       	out	0x05, r24	; 5
 146:	32 c0       	rjmp	.+100    	; 0x1ac <afisare+0xc4>
 148:	5a 9a       	sbi	0x0b, 2	; 11
 14a:	28 9a       	sbi	0x05, 0	; 5
 14c:	29 9a       	sbi	0x05, 1	; 5
 14e:	2c 9a       	sbi	0x05, 4	; 5
 150:	2d 9a       	sbi	0x05, 5	; 5
 152:	2c c0       	rjmp	.+88     	; 0x1ac <afisare+0xc4>
 154:	5a 9a       	sbi	0x0b, 2	; 11
 156:	28 9a       	sbi	0x05, 0	; 5
 158:	29 9a       	sbi	0x05, 1	; 5
 15a:	2b 9a       	sbi	0x05, 3	; 5
 15c:	2d 9a       	sbi	0x05, 5	; 5
 15e:	26 c0       	rjmp	.+76     	; 0x1ac <afisare+0xc4>
 160:	5a 9a       	sbi	0x0b, 2	; 11
 162:	5c 9a       	sbi	0x0b, 4	; 11
 164:	29 9a       	sbi	0x05, 1	; 5
 166:	2b 9a       	sbi	0x05, 3	; 5
 168:	21 c0       	rjmp	.+66     	; 0x1ac <afisare+0xc4>
 16a:	5c 9a       	sbi	0x0b, 4	; 11
 16c:	28 9a       	sbi	0x05, 0	; 5
 16e:	29 9a       	sbi	0x05, 1	; 5
 170:	2b 9a       	sbi	0x05, 3	; 5
 172:	2d 9a       	sbi	0x05, 5	; 5
 174:	1b c0       	rjmp	.+54     	; 0x1ac <afisare+0xc4>
 176:	5c 9a       	sbi	0x0b, 4	; 11
 178:	28 9a       	sbi	0x05, 0	; 5
 17a:	29 9a       	sbi	0x05, 1	; 5
 17c:	2c 9a       	sbi	0x05, 4	; 5
 17e:	2d 9a       	sbi	0x05, 5	; 5
 180:	2b 9a       	sbi	0x05, 3	; 5
 182:	14 c0       	rjmp	.+40     	; 0x1ac <afisare+0xc4>
 184:	5a 9a       	sbi	0x0b, 2	; 11
 186:	28 9a       	sbi	0x05, 0	; 5
 188:	2b 9a       	sbi	0x05, 3	; 5
 18a:	10 c0       	rjmp	.+32     	; 0x1ac <afisare+0xc4>
 18c:	5c 9a       	sbi	0x0b, 4	; 11
 18e:	5a 9a       	sbi	0x0b, 2	; 11
 190:	28 9a       	sbi	0x05, 0	; 5
 192:	29 9a       	sbi	0x05, 1	; 5
 194:	2c 9a       	sbi	0x05, 4	; 5
 196:	2d 9a       	sbi	0x05, 5	; 5
 198:	2b 9a       	sbi	0x05, 3	; 5
 19a:	08 c0       	rjmp	.+16     	; 0x1ac <afisare+0xc4>
 19c:	5c 9a       	sbi	0x0b, 4	; 11
 19e:	5a 9a       	sbi	0x0b, 2	; 11
 1a0:	28 9a       	sbi	0x05, 0	; 5
 1a2:	29 9a       	sbi	0x05, 1	; 5
 1a4:	2d 9a       	sbi	0x05, 5	; 5
 1a6:	2b 9a       	sbi	0x05, 3	; 5
 1a8:	01 c0       	rjmp	.+2      	; 0x1ac <afisare+0xc4>
 1aa:	2a 9a       	sbi	0x05, 2	; 5
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <delay>:
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	99 e1       	ldi	r25, 0x19	; 25
 1b8:	89 2f       	mov	r24, r25
 1ba:	81 50       	subi	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <delay+0x8>
 1be:	2f 5f       	subi	r18, 0xFF	; 255
 1c0:	3f 4f       	sbci	r19, 0xFF	; 255
 1c2:	28 36       	cpi	r18, 0x68	; 104
 1c4:	82 e4       	ldi	r24, 0x42	; 66
 1c6:	38 07       	cpc	r19, r24
 1c8:	b9 f7       	brne	.-18     	; 0x1b8 <delay+0x6>
 1ca:	89 e1       	ldi	r24, 0x19	; 25
 1cc:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <loopdoi>
 1d0:	88 e6       	ldi	r24, 0x68	; 104
 1d2:	92 e4       	ldi	r25, 0x42	; 66
 1d4:	a0 e0       	ldi	r26, 0x00	; 0
 1d6:	b0 e0       	ldi	r27, 0x00	; 0
 1d8:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <loopunu>
 1dc:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <loopunu+0x1>
 1e0:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <loopunu+0x2>
 1e4:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <loopunu+0x3>
 1e8:	08 95       	ret

000001ea <buton>:
 1ea:	4b 9b       	sbis	0x09, 3	; 9
 1ec:	08 c0       	rjmp	.+16     	; 0x1fe <buton+0x14>
 1ee:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <delay>
 1f2:	89 b1       	in	r24, 0x09	; 9
 1f4:	83 fb       	bst	r24, 3
 1f6:	88 27       	eor	r24, r24
 1f8:	80 f9       	bld	r24, 0
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	08 95       	ret
 1fe:	08 95       	ret

00000200 <initTimer1>:
 200:	82 e0       	ldi	r24, 0x02	; 2
 202:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 20c:	08 95       	ret

0000020e <__vector_13>:
 20e:	1f 92       	push	r1
 210:	0f 92       	push	r0
 212:	0f b6       	in	r0, 0x3f	; 63
 214:	0f 92       	push	r0
 216:	11 24       	eor	r1, r1
 218:	8f 93       	push	r24
 21a:	9f 93       	push	r25
 21c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <i>
 220:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <i+0x1>
 224:	01 96       	adiw	r24, 0x01	; 1
 226:	81 31       	cpi	r24, 0x11	; 17
 228:	91 05       	cpc	r25, r1
 22a:	2c f4       	brge	.+10     	; 0x236 <__vector_13+0x28>
 22c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <i+0x1>
 230:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <i>
 234:	08 c0       	rjmp	.+16     	; 0x246 <__vector_13+0x38>
 236:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <i+0x1>
 23a:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <i>
 23e:	95 b1       	in	r25, 0x05	; 5
 240:	84 e0       	ldi	r24, 0x04	; 4
 242:	89 27       	eor	r24, r25
 244:	85 b9       	out	0x05, r24	; 5
 246:	9f 91       	pop	r25
 248:	8f 91       	pop	r24
 24a:	0f 90       	pop	r0
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	0f 90       	pop	r0
 250:	1f 90       	pop	r1
 252:	18 95       	reti

00000254 <initSerial>:
 254:	e1 ec       	ldi	r30, 0xC1	; 193
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	88 61       	ori	r24, 0x18	; 24
 25c:	80 83       	st	Z, r24
 25e:	e2 ec       	ldi	r30, 0xC2	; 194
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	80 81       	ld	r24, Z
 264:	86 60       	ori	r24, 0x06	; 6
 266:	80 83       	st	Z, r24
 268:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 26c:	87 e6       	ldi	r24, 0x67	; 103
 26e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 272:	08 95       	ret

00000274 <send>:
 274:	e0 ec       	ldi	r30, 0xC0	; 192
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	90 81       	ld	r25, Z
 27a:	95 ff       	sbrs	r25, 5
 27c:	fd cf       	rjmp	.-6      	; 0x278 <send+0x4>
 27e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 282:	08 95       	ret

00000284 <initADC>:
void initADC(){
	ADMUX |= 0;
 284:	ec e7       	ldi	r30, 0x7C	; 124
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	80 81       	ld	r24, Z
 28a:	80 83       	st	Z, r24
	ADMUX |= (1<<6); 
 28c:	80 81       	ld	r24, Z
 28e:	80 64       	ori	r24, 0x40	; 64
 290:	80 83       	st	Z, r24
	ADCSRA = 0x87;              
 292:	ea e7       	ldi	r30, 0x7A	; 122
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	87 e8       	ldi	r24, 0x87	; 135
 298:	80 83       	st	Z, r24
	ADCSRA |= (1<<6);
 29a:	80 81       	ld	r24, Z
 29c:	80 64       	ori	r24, 0x40	; 64
 29e:	80 83       	st	Z, r24
 2a0:	08 95       	ret

000002a2 <read_adc>:
}

uint8_t read_adc(){
	                  
	ADCSRA |= (1<<6);                
 2a2:	ea e7       	ldi	r30, 0x7A	; 122
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	80 64       	ori	r24, 0x40	; 64
 2aa:	80 83       	st	Z, r24
	while(ADCSRA & (1<<6)); 
 2ac:	80 81       	ld	r24, Z
 2ae:	86 fd       	sbrc	r24, 6
 2b0:	fd cf       	rjmp	.-6      	; 0x2ac <read_adc+0xa>
	return ((ADC>>1)-4);          
 2b2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2b6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2ba:	96 95       	lsr	r25
 2bc:	87 95       	ror	r24
 2be:	84 50       	subi	r24, 0x04	; 4
 2c0:	08 95       	ret

000002c2 <initializarii>:
#include "UART.h"
#include "ADC.h"
uint8_t NumarAfisaj=0;

void initializarii(){
	initADC();
 2c2:	0e 94 42 01 	call	0x284	; 0x284 <initADC>
	initIO();
 2c6:	0e 94 5d 00 	call	0xba	; 0xba <initIO>
	afisare(0);
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	0e 94 74 00 	call	0xe8	; 0xe8 <afisare>
	initTimer1();
 2d2:	0e 94 00 01 	call	0x200	; 0x200 <initTimer1>
	initSerial();
 2d6:	0e 94 2a 01 	call	0x254	; 0x254 <initSerial>
	sei();
 2da:	78 94       	sei
 2dc:	08 95       	ret

000002de <main>:
}
int main(void) {
	initializarii();
 2de:	0e 94 61 01 	call	0x2c2	; 0x2c2 <initializarii>
	
	while (1)
	{	
		delay();
 2e2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <delay>
		if (buton()==1){		
 2e6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <buton>
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	d1 f7       	brne	.-12     	; 0x2e2 <main+0x4>
			if(NumarAfisaj>9){
 2ee:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 2f2:	8a 30       	cpi	r24, 0x0A	; 10
 2f4:	10 f0       	brcs	.+4      	; 0x2fa <main+0x1c>
				NumarAfisaj=0;
 2f6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
			}
			afisare(NumarAfisaj++);
 2fa:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 2fe:	91 e0       	ldi	r25, 0x01	; 1
 300:	98 0f       	add	r25, r24
 302:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__data_end>
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 74 00 	call	0xe8	; 0xe8 <afisare>
			send(NumarAfisaj);
 30c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 310:	0e 94 3a 01 	call	0x274	; 0x274 <send>
			send(read_adc());
 314:	0e 94 51 01 	call	0x2a2	; 0x2a2 <read_adc>
 318:	0e 94 3a 01 	call	0x274	; 0x274 <send>
 31c:	e2 cf       	rjmp	.-60     	; 0x2e2 <main+0x4>

0000031e <__tablejump2__>:
 31e:	ee 0f       	add	r30, r30
 320:	ff 1f       	adc	r31, r31
 322:	05 90       	lpm	r0, Z+
 324:	f4 91       	lpm	r31, Z
 326:	e0 2d       	mov	r30, r0
 328:	09 94       	ijmp

0000032a <_exit>:
 32a:	f8 94       	cli

0000032c <__stop_program>:
 32c:	ff cf       	rjmp	.-2      	; 0x32c <__stop_program>
